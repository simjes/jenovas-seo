---
import EpisodeLink from "@/components/EpisodeLink.astro";
import Hosts from "@/components/Hosts.astro";
import Layout from "@/components/Layout.astro";
import PlayPodcastApple from "@/components/PlayPodcastApple.astro";
import PlayPodcastRadCrew from "@/components/PlayPodcastRadCrew.astro";
import SpotifyCard from "@/components/SpotifyCard.astro";
import { authors } from "@/lib/meta";
import { getShowDetails } from "@/lib/spotify";
import { SEO } from "astro-seo";
import { Schema } from "astro-seo-schema";

const showDetails = await getShowDetails();
---

<Layout>
  <Fragment slot="head">
    <SEO
      title={showDetails.name}
      description={showDetails.description}
      openGraph={{
        basic: {
          title: showDetails.name,
          type: "website",
          image: showDetails.images[0].url,
          url: Astro.url.toString(),
        },
        optional: {
          description: showDetails.description,
        },
      }}
      twitter={{
        card: "summary_large_image",
        site: "@rad_crew",
        title: showDetails.name,
        description: showDetails.description,
        image: showDetails.images[0].url,
      }}
    />

    <Schema
      item={{
        "@context": "https://schema.org",
        "@type": "PodcastSeries",
        name: showDetails.name,
        description: showDetails.description,
        image: showDetails.images[0].url,
        url: Astro.url.toString(),
        publisher: {
          "@type": "Organization",
          name: showDetails.publisher,
        },
        inLanguage: showDetails.languages[0],
        webFeed: "https://www.radcrew.net/category/finalfantasy/feed",
        alternateName: "NoBuddies",
        author: authors,
      }}
    />
  </Fragment>

  <div class="flex flex-col items-center h-full gap-10 mt-20">
    <SpotifyCard
      link={showDetails.external_urls.spotify}
      title={showDetails.name}
      description={showDetails.description}
      imageUrl={showDetails.images[0].url}
    />

    <div class="flex gap-4 flex-wrap">
      <PlayPodcastApple />
      <PlayPodcastRadCrew />
    </div>

    <div>
      <h2 class="text-2xl font-bold mb-2 text-center">Verter</h2>
      <Hosts />
    </div>

    <div>
      <h2 class="text-2xl font-bold mb-2 text-center">Episoder</h2>

      <nav class="w-full max-w-4xl mx-auto">
        <ul class="flex flex-col gap-4">
          {
            showDetails.episodes.items.map((episode, index) => (
              <li>
                <EpisodeLink
                  name={episode.name}
                  number={showDetails.episodes.items.length - index}
                  release={episode.release_date}
                  durationMs={episode.duration_ms}
                />
              </li>
            ))
          }
        </ul>
      </nav>
    </div>
  </div>
</Layout>
